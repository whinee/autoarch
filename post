###############################################################################

#══════════════════════════════════════════════════════════#
## SETUP STUFF
#══════════════════════════════════════════════════════════#

pacman -Syy --noconfirm dosfstools efibootmgr grub mtools os-prober
reflector --latest 20 --sort rate --save /etc/pacman.d/mirrorlist
mkdir /boot/EFI
mkdir /boot/EFI
mount $boot /boot/EFI
mount $boot /boot/EFI
grub-install --target=x86_64-efi --bootloader-id=GRUB --efi-directory=/boot/EFI
grub-install --target=x86_64-efi --bootloader-id=grub_uefi --recheck
grub-mkconfig -o /boot/grub/grub.cfg

### SET TIMEZONE AND HARDWARE CLOCK
ln -sf /usr/share/zoneinfo/${timezone} /etc/localtime
hwclock --systohc --utc

### SET LANGUAGE
locale-gen
echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
echo "LANG=en_US.UTF-8" > /etc/locale.conf

### SET HOSTNAME AND HOSTS FILE
echo "${host}" > /etc/hostname
echo "127.0.0.1    localhost
::1          localhost
127.0.1.1    ${host}" > /etc/hosts

### SET USER
useradd -m "${user}" -G wheel,audio,video
echo "$user:$1" | chpasswd
echo "root:$1" | chpasswd

### SET UP DOAS AS REPLACEMENT FOR SUDO
echo "permit :wheel
permit nopass :wheel" >> /etc/doas.conf
ln -s /bin/doas /bin/sudo

### SET ENV VARS
echo "ZDOTDIR=/home/${user}/.config/zsh" >> /etc/environment

### REPLACE sh WITH dash
ln -sfT dash /usr/bin/sh
echo "[Trigger]
Type = Package
Operation = Install
Operation = Upgrade
Target = bash

[Action]
Description = Re-pointing /bin/sh symlink to dash...
When = PostTransaction
Exec = /usr/bin/ln -sfT dash /usr/bin/sh
Depends = dash" > /usr/share/libalpm/hooks/dashbinsh.hook

### SET DEFAULT SHELL TO zsh
chsh "${user}" -s /bin/zsh

#══════════════════════════════════════════════════════════#

#══════════════════════════════════════════════════════════#
## ENABLE STUFF
#══════════════════════════════════════════════════════════#

### HIBERNATION
sed -e 's/^HOOKS.*/HOOKS=(base udev autodetect keyboard modconf block filesystems resume fsck)/' -i /etc/mkinitcpio.conf
mkinitcpio -p linux-lts

### SERVICES
systemctl enable NetworkManager
systemctl enable cronie.service
systemctl enable bluetooth.service

#══════════════════════════════════════════════════════════#

#══════════════════════════════════════════════════════════#
## INSTALL STUFF
#══════════════════════════════════════════════════════════#

#—————————————————————————————————————#
### FROM SOURCE
#—————————————————————————————————————#

#-----------------#
#### /tmp
#-----------------#

cd /tmp/

##### PACKAGE QUERY
git clone https://aur.archlinux.org/package-query.git
cd package-query/
makepkg -si --noconfirm
cd .. && rm -rf package-query

##### PYTHON
# NOTE: enable if necessary
# mkdir python/
# wget -O python.tgz https://www.python.org/ftp/python/3.10.2/Python-3.10.2.tgz
# tar xzf python.tgz --directory python --strip-components 1
# cd python/
# ./configure
# make
# make install
# cd .. && rm -rf python.tgz python/

##### YAOURT
git clone https://aur.archlinux.org/yaourt.git
cd yaourt/
makepkg -si --noconfirm
echo -e "NOCONFIRM=1\nBUILD_NOCONFIRM=1\nEDITFILES=0" >> ~/.config/.yaourtrc
cd .. && rm -rf yaourt/

##### NPM
curl -qL https://www.npmjs.com/install.sh | sh

##### BETTER DISCORD
git clone https://github.com/BetterDiscord/BetterDiscord.git
npm install
npm run build
npm run inject canary
cd .. && rm -rf BetterDiscord/

##### SNAP
git clone https://aur.archlinux.org/snapd.git
cd snapd
makepkg -si --noconfirm
systemctl enable --now snapd.socket
ln -s /var/lib/snapd/snap /snap
modprobe loop
cd .. && rm -rf snapd

cd ~

#-----------------#

#-----------------#
#### /opt
#-----------------#

cd /opt

##### YAY
git clone https://aur.archlinux.org/yay.git
chown -R "$USER:" yay/
cd yay
makepkg -si --noconfirm

cd ~

#-----------------#

#-----------------#
#### MISCELLANEOUS
#-----------------#

#### PROMPT
git clone https://github.com/spaceship-prompt/spaceship-prompt.git --depth=1 ~/.config/zsh/functions/spaceship/
ln -sf /home/${user}/.config/zsh/functions/spaceship/spaceship.zsh /home/${user}/.config/zsh/functions/prompt_spaceship_setup

#-----------------#

#—————————————————————————————————————#

### THROUGH YAOURT
yes | yaourt -S discord_arch_electron discord-canary-electron-bin discord-ptb insomnia pamac-aur scrcpy visual-studio-code-bin

### THROUGH SNAP
snap install drawio

#══════════════════════════════════════════════════════════#

#══════════════════════════════════════════════════════════#
## INSTALL STUFF
#══════════════════════════════════════════════════════════#

curl -L https://github.com/whinee/autoarch/raw/master/postpost > /home/whinee/postpost
# running the script as the user
su -c "sh /home/zenith71/postpost" zenith71


## CLEANUP & EXIT
rm -rf /home/${user}/{.bash_history,.bash_profile,.bash_logout,.bashrc}

#══════════════════════════════════════════════════════════#

################################################################################